homeassistant:
  customize:
    sensor.iotawatt_total:
      friendly_name: IoTaWatt
      icon: mdi:flash-circle
    sensor.sparsnas_energy_consumption_momentary:
      icon: mdi:flash-circle
      friendly_name: Energy total
    sensor.sparsnas_iotawatt:
      icon: mdi:flash-circle
    sensor.iotawatt_inverter:
      friendly_name: Inverter
      icon: mdi:flash-circle
    sensor.inverter_kwh:
      icon: mdi:flash-circle
    sensor.kwh_today:
      friendly_name: Today total
    sensor.inverter_daily:
      friendly_name: Inverter Today
    sensor.sparsnas_daily:
      friendly_name: Sparsnas Today
    sensor.sparsnas_monthly:
      friendly_name: Sparsnas this month
    sensor.sparsnas_yearly:
      friendly_name: Sparsnas this year

sensor:
  - platform: rest
    resource: 'http://192.168.1.2:8086/query?db=iotawatt&q=SELECT%20entity_id,%20max(mean)%20from%20(SELECT%20mean(%22value%22)%20FROM%20%22Watts%22%20WHERE%20(%22entity_id%22%20!=%20%27Total%27)%20AND%20time%20%3E=%20NOW()%20-%201m%20GROUP%20BY%20%22entity_id%22)'
    name: IoTaWatt top usage
    value_template: '{{ value_json["results"][0]["series"][0]["values"][0][2] |
    round(0) }}'
    json_attributes: 'results'
  - platform: template
    sensors:
      iotawatt_top_consumer:
        unique_id: iotawatt_top_consumer
        friendly_name: IoTaWatt top consumer
        icon_template: mdi:flash-circle
        unit_of_measurement: W
        value_template: "{% set v = states.sensor.iotawatt_top_usage.attributes.results[0].series[0]['values'][0]
        %} 
        {% if v[2] < (states('sensor.chargeamps_watt') | float) %}
          {% set v = ['', 'CharegeAmps', (states('sensor.chargeamps_watt') | float)] %}
        {% endif %}
        {{'%s @ %d' % ('Dehumidifier' if states('climate.mjovik') == 'off' and v[1] == 'Inverter' else v[1] | replace('_', ' '), v[2]) }}" 

  - platform: rest
    resource: 'http://192.168.1.22/query?header=yes&select=[z_Total,L1.Amps,L2.Amps,L3.Amps]&begin=s-30s&end=s&group=all'
    name: IoTaWatt Total usage
    value_template: '{{ value_json["data"][0][0] }}'
    json_attributes: 'data'
    device_class: power
    unit_of_measurement: "W"
    scan_interval: 30
  - platform: template
    sensors:
      iotawatt_l1:
        unique_id: iotawatt_l1
        value_template: '{{ state_attr("sensor.iotawatt_total_usage", "data")[0][1] }}'
        unit_of_measurement: "A"
        device_class: power
        friendly_name: L1
      iotawatt_l2:
        unique_id: iotawatt_l2
        value_template: '{{ state_attr("sensor.iotawatt_total_usage", "data")[0][2] }}'
        unit_of_measurement: "A"
        device_class: power
        friendly_name: L2
      iotawatt_l3:
        unique_id: iotawatt_l3
        value_template: '{{ state_attr("sensor.iotawatt_total_usage", "data")[0][3] }}'
        unit_of_measurement: "A"
        device_class: power
        friendly_name: L3
  - platform: template
    sensors:
      sparsnas_iotawatt:
        unique_id: sparsnas_iotawatt
        friendly_name: "Others"
        unit_of_measurement: W
        value_template: >-
          {% set value =
          (states("sensor.sparsnas_w") | float -
          ((states("sensor.iotawatt_total_usage") | float) +
          (states("sensor.chargeamps_watt") | float))
          ) | round(1) %}
          {% if value < 0 %}
          {{ states("sensor.sparsnas_iotawatt") }}
          {% else %}
          {{ value }}
          {% endif %}
  - platform: integration
    source: sensor.iotawatt_input_inverter
    name: Inverter kWh
    unit_prefix: k
    round: 2
  - platform: rest
    name: IoTaWatt
    resource: 'http://192.168.1.2:8086/query?db=iotawatt&q=SELECT%20last(%22value%22)%20FROM%20%22Watts%22%20WHERE%20time%20%3E%20NOW()-10m%20GROUP%20BY%20%22entity_id%22'
    value_template: 'OK'
    json_attributes:
      - results
  - platform: template
    sensors:
      iotawatt_input_bathroom:
        unique_id: iotawatt_input_bathroom
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Bathroom" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Bathroom'
      iotawatt_input_bedroom_1:
        unique_id: iotawatt_input_bedroom_1
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Bedroom_1" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Bedroom 1'
      iotawatt_input_bedroom_2:
        unique_id: iotawatt_input_bedroom_2
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Bedroom_2" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Bedroom 2'
      iotawatt_input_dishwasher:
        unique_id:       iotawatt_input_dishwasher
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Dishwasher" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Dishwasher'
      iotawatt_input_fridge:
        unique_id:       iotawatt_input_fridge
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Fridge" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Fridge'
      iotawatt_input_inverter:
        unique_id:       iotawatt_input_inverter
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Inverter" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Inverter'
      iotawatt_input_kitchen:
        unique_id:       iotawatt_input_kitchen
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Kitchen" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Kitchen'
      iotawatt_input_living_room:
        unique_id:       iotawatt_input_living_room
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Living_room" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Living room'
      iotawatt_input_total:
        unique_id:       iotawatt_input_total
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Total" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Total'
      iotawatt_input_vvb:
        unique_id:       iotawatt_input_vvb
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "VVB" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'VVB'
      iotawatt_input_washer:
        unique_id:       iotawatt_input_washer
        value_template: '{% for row in state_attr("sensor.iotawatt", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Washer" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Washer'
          

automation:
- id: 'sparsnas_setup'
  alias: Sparsnäs setup
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      payload: '{% raw -%}
      {
        "device": {"sw_version": "215a4aa", "name": "Sparsnäs 602064", "identifiers": "602064", "model": "Sparsnäs", "manufacturer": "IKEA"}, 
        "device_class": "power",
        "unit_of_measurement": "kWh", 
        "name": "Sparsnäs kWh", 
        "unique_id": "sparsnas_602064_kwh",
        "state_topic": "sparsnas/602064", 
        "json_attributes_topic": "sparsnas/602064", 
				"value_template": "{{ value_json.kWh | round(2) }}",
        "icon": "mdi:flash-circle"
      }
      {%- endraw %}'
      topic: home/sensor/sparsnas/602064_kwh/config
      retain: true
    service: mqtt.publish
  - data:
      payload: '{% raw -%}
      {
        "device": {"sw_version": "215a4aa", "name": "Sparsnäs 602064", "identifiers": "602064", "model": "Sparsnäs", "manufacturer": "IKEA"}, 
        "device_class": "power",
        "unit_of_measurement": "W", 
        "name": "Sparsnäs Watt", 
        "unique_id": "sparsnas_602064_watt",
        "state_topic": "sparsnas/602064", 
        "json_attributes_topic": "sparsnas/602064", 
        "value_template": "{{ value_json.Watt | round(1) }}",
        "icon": "mdi:flash-circle"
      }
      {%- endraw %}'
      topic: home/sensor/sparsnas/602064_Watt/config
      retain: true
    service: mqtt.publish

utility_meter:
  sparsnas_yearly:
    source: sensor.sparsnas_kwh
    cycle: yearly
  sparsnas_monthly:
    source: sensor.sparsnas_kwh
    cycle: monthly
  sparsnas_daily:
    source: sensor.sparsnas_kwh
    cycle: daily
  inverter_daily:
    source: sensor.inverter_kwh
    cycle: daily

