homeassistant:
  customize:
    sensor.iotawatt_total:
      friendly_name: IoTaWatt
      icon: mdi:flash-circle
    sensor.sparsnas_energy_consumption_momentary:
      icon: mdi:flash-circle
      friendly_name: Energy total
    sensor.sparsnas_iotawatt:
      icon: mdi:flash-circle
    sensor.iotawatt_inverter:
      friendly_name: Inverter
      icon: mdi:flash-circle
    sensor.inverter_kwh:
      icon: mdi:flash-circle
    sensor.kwh_today:
      friendly_name: Today total
    sensor.inverter_daily:
      friendly_name: Inverter Today
    sensor.sparsnas_daily:
      friendly_name: Sparsnas Today
    sensor.sparsnas_monthly:
      friendly_name: Sparsnas this month
    sensor.sparsnas_yearly:
      friendly_name: Sparsnas this year

sensor:
#IoTaWatt config
  - platform: influxdb
    host: 192.168.1.2
    queries:
      - name: Iotawatt Total (old)
        unit_of_measurement: W
        value_template: '{{ value | round(1) }}'
        group_function: last
        where: '"entity_id" = ''Total'''
        measurement: '"Watts"'
        field: value
        database: iotawatt
      - name: Iotawatt inverter (old)
        unit_of_measurement: W
        value_template: '{{ value | round(1) }}'
        group_function: last
        where: '"entity_id" = ''Inverter'''
        measurement: '"Watts"'
        field: value
        database: iotawatt
  - platform: template
    sensors:
      sparsnas_iotawatt:
        friendly_name: "Others"
        unit_of_measurement: W
        value_template: >-
          {% set value = (states("sensor.sparsnas_energy_consumption_momentary") | float -  (states("sensor.iotawatt") | float)) | round(1) %}
          {% if value < 0 %}
          {{ states("sensor.sparsnas_iotawatt") }}
          {% else %}
          {{ value }}
          {% endif %}
  - platform: rest
    resource: 'http://192.168.1.22/status?outputs=yes&inputs=yes'
    name: iotawatt
    value_template: '{{ value_json.outputs[2].value | float | round(1) }}'
    unit_of_measurement: "W"
    json_attributes:
      - outputs
      - inputs
  - platform: template
    sensors:
      iotawatt_appliences:
        value_template: '{{ states.sensor.iotawatt.attributes.outputs[0].value }}'
        friendly_name_template: '{{ states.sensor.iotawatt.attributes.outputs[0].name }}'
        unit_of_measurement: "W"
      iotawatt_inverter:
        value_template: '{{ states.sensor.iotawatt.attributes.outputs[1].value | round(1) }}'
        friendly_name_template: '{{ states.sensor.iotawatt.attributes.outputs[1].name }}'
        unit_of_measurement: "W"
      iotawatt_total:
        value_template: '{{ states.sensor.iotawatt.attributes.outputs[2].value | round(1) }}'
        friendly_name_template: '{{ states.sensor.iotawatt.attributes.outputs[2].name }}'
        unit_of_measurement: "W"
      dishwasher_runtime:
        device_class: timestamp
        value_template: >
          {% if is_state('sensor.washer_runtime', None)  and
          state_attr('sensor.iotawatt', 'inputs')[9].Watts|float > 3 %}
            {{ now() }}
          {% else %}
            {{ None }}
          {% endif %}
      washer_runtime:
        device_class: timestamp
        value_template: >
          {% if is_state('sensor.washer_runtime', '')  and
          state_attr('sensor.iotawatt', 'inputs')[1].Watts|float > 3 %}
            {{ now() }}
          {% else %}
            {{''}}
          {% endif %}
  - platform: integration
    source: sensor.iotawatt_inverter
    name: Inverter kWh
    unit_prefix: k
    round: 2
  - platform: rest
    name: IoTaWatt
    resource: 'http://192.168.1.2:8086/query?db=iotawatt&q=SELECT%20last(%22value%22)%20FROM%20%22Watts%22%20WHERE%20time%20%3E%20NOW()-10m%20GROUP%20BY%20%22entity_id%22'
    value_template: 'OK'
    json_attributes:
      - results
  - platform: template
    sensors:
      iotawatt_input_bathroom:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Bathroom" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Bathroom'
      iotawatt_input_bedroom_1:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Bedroom_1" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Bedroom 1'
      iotawatt_input_bedroom_2:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Bedroom_2" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Bedroom 2'
      iotawatt_input_dishwasher:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Dishwasher" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Dishwasher'
      iotawatt_input_fridge:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Fridge" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Fridge'
      iotawatt_input_inverter:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Inverter" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Inverter'
      iotawatt_input_kitchen:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Kitchen" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Kitchen'
      iotawatt_input_living_room:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Living_room" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Living room'
      iotawatt_input_total:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Total" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Total'
      iotawatt_input_vvb:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "VVB" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'VVB'
      iotawatt_input_washer:
        value_template: '{% for row in state_attr("sensor.iotawatt_2", "results")[0]["series"] -%}{% if row["tags"]["entity_id"] == "Washer" -%}{{ row["values"][0][1] | float }}{% endif -%}{% endfor -%}'
        unit_of_measurement: W
        device_class: power
        friendly_name: 'Washer'
          

automation:
- id: 'sparsnas_setup'
  alias: Sparsnäs setup
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      payload: '{"device": {"sw_version": "215a4aa", "name": "Sparsnäs 602064", "identifiers":
        "602064", "model": "Sparsnäs", "manufacturer": "IKEA"}, "unit_of_measurement":
        "kWh", "json_attributes": ["Sequence", "FreqErr", "Effect", "Data4", "Sensor",
        "battery"], "name": "Sparsnäs kWh", "unique_id": "sparsnas_602064_kwh", "state_topic":
        "sparsnas/602064", "value_template": "{{ value_json.kWh | round(2) }}", "icon":
        "mdi:flash-circle"}'
      topic: home/sensor/sparsnas/602064_kwh/config
      retain: true
    service: mqtt.publish
  - data:
      payload: '{"device": {"sw_version": "215a4aa", "name": "Sparsnäs 602064", "identifiers":
        "602064", "model": "Sparsnäs", "manufacturer": "IKEA"}, "unit_of_measurement":
        "W", "json_attributes": ["Sequence", "FreqErr","Effect", "Data4", "Sensor",
        "battery"], "name": "Sparsnäs Watt", "unique_id": "sparsnas_602064_watt",
        "state_topic": "sparsnas/602064", "value_template": "{{ value_json.Watt |
        round(1) }}", "icon": "mdi:flash-circle"}'
      topic: home/sensor/sparsnas/602064_Watt/config
      retain: true
    service: mqtt.publish

utility_meter:
  sparsnas_yearly:
    source: sensor.sparsnas_energy_consumption_over_time 
    cycle: yearly
  sparsnas_monthly:
    source: sensor.sparsnas_energy_consumption_over_time
    cycle: monthly
  sparsnas_daily:
    source: sensor.sparsnas_energy_consumption_over_time
    cycle: daily
  inverter_daily:
    source: sensor.inverter_kwh
    cycle: daily

